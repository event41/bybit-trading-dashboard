import { NextResponse } from "next/server"

export async function GET() {
  console.log("üîç === –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø ===")

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const envDiagnostic = {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–π
    bybitApiKey: process.env.BYBIT_API_KEY || null,
    bybitApiSecret: process.env.BYBIT_API_SECRET || null,

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—é—á–∞—Ö
    hasApiKey: !!process.env.BYBIT_API_KEY,
    hasApiSecret: !!process.env.BYBIT_API_SECRET,
    apiKeyLength: process.env.BYBIT_API_KEY?.length || 0,
    apiSecretLength: process.env.BYBIT_API_SECRET?.length || 0,

    // –ü—Ä–µ–≤—å—é –∫–ª—é—á–µ–π (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
    apiKeyPreview: process.env.BYBIT_API_KEY ? `${process.env.BYBIT_API_KEY.substring(0, 8)}...` : "–ù–ï–¢",
    apiSecretPreview: process.env.BYBIT_API_SECRET ? `${process.env.BYBIT_API_SECRET.substring(0, 8)}...` : "–ù–ï–¢",

    // –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    nodeEnv: process.env.NODE_ENV,
    platform: process.platform,
    cwd: process.cwd(),

    // –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å BYBIT
    allBybitVars: Object.keys(process.env).filter((key) => key.includes("BYBIT")),

    // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    totalEnvVars: Object.keys(process.env).length,

    // –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    timestamp: new Date().toISOString(),

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏–º–µ–Ω–∞
    alternativeKeys: {
      BYBIT_API_KEY: !!process.env.BYBIT_API_KEY,
      bybit_api_key: !!process.env.bybit_api_key,
      BYBIT_KEY: !!process.env.BYBIT_KEY,
      API_KEY: !!process.env.API_KEY,
    },
  }

  // –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞
  console.log("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:")
  console.log("- BYBIT_API_KEY –Ω–∞–π–¥–µ–Ω:", envDiagnostic.hasApiKey)
  console.log("- BYBIT_API_SECRET –Ω–∞–π–¥–µ–Ω:", envDiagnostic.hasApiSecret)
  console.log("- –î–ª–∏–Ω–∞ API Key:", envDiagnostic.apiKeyLength)
  console.log("- –î–ª–∏–Ω–∞ API Secret:", envDiagnostic.apiSecretLength)
  console.log("- NODE_ENV:", envDiagnostic.nodeEnv)
  console.log("- –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞:", envDiagnostic.cwd)
  console.log("- –í—Å–µ BYBIT –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:", envDiagnostic.allBybitVars)
  console.log("- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:", envDiagnostic.totalEnvVars)

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É
  let diagnosis = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞"
  let recommendation = "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"
  let severity = "error"

  if (!envDiagnostic.hasApiKey && !envDiagnostic.hasApiSecret) {
    diagnosis = "–§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
    recommendation = "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.local –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä"
    severity = "critical"
  } else if (!envDiagnostic.hasApiKey) {
    diagnosis = "BYBIT_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    recommendation = "–î–æ–±–∞–≤—å—Ç–µ BYBIT_API_KEY –≤ —Ñ–∞–π–ª .env.local"
    severity = "error"
  } else if (!envDiagnostic.hasApiSecret) {
    diagnosis = "BYBIT_API_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    recommendation = "–î–æ–±–∞–≤—å—Ç–µ BYBIT_API_SECRET –≤ —Ñ–∞–π–ª .env.local"
    severity = "error"
  } else if (envDiagnostic.apiKeyLength < 10) {
    diagnosis = "BYBIT_API_KEY —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"
    recommendation = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞"
    severity = "warning"
  } else if (envDiagnostic.apiSecretLength < 20) {
    diagnosis = "BYBIT_API_SECRET —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"
    recommendation = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API —Å–µ–∫—Ä–µ—Ç–∞"
    severity = "warning"
  } else {
    diagnosis = "API –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã –∏ –≤—ã–≥–ª—è–¥—è—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    recommendation = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫–ª—é—á–µ–π –Ω–∞ Bybit"
    severity = "info"
  }

  return NextResponse.json({
    success: true,
    environment: envDiagnostic,
    diagnosis: {
      issue: diagnosis,
      recommendation,
      severity,
      keysFound: envDiagnostic.hasApiKey && envDiagnostic.hasApiSecret,
    },
    instructions: {
      step1: "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.local –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞",
      step2: "–î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ: BYBIT_API_KEY=–≤–∞—à_–∫–ª—é—á",
      step3: "–î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ: BYBIT_API_SECRET=–≤–∞—à_—Å–µ–∫—Ä–µ—Ç",
      step4: "–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä (Ctrl+C, –∑–∞—Ç–µ–º npm run dev)",
      step5: "–û–±–Ω–æ–≤–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É",
    },
  })
}
