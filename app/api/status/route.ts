import { NextResponse } from "next/server"

export async function GET() {
  try {
    console.log("üîç === –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ò–°–¢–ï–ú–´ ===")

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const apiKey = process.env.BYBIT_API_KEY
    const apiSecret = process.env.BYBIT_API_SECRET

    console.log("- API Key –Ω–∞–π–¥–µ–Ω:", !!apiKey)
    console.log("- API Secret –Ω–∞–π–¥–µ–Ω:", !!apiSecret)
    console.log("- API Key –¥–ª–∏–Ω–∞:", apiKey?.length || 0)
    console.log("- API Secret –¥–ª–∏–Ω–∞:", apiSecret?.length || 0)

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const keysExist = !!(apiKey && apiSecret)
    const keysValid = keysExist && apiKey.length > 10 && apiSecret.length > 20
    const keysConfigured = keysValid && !apiKey.includes("–≤–∞—à_") && !apiSecret.includes("–≤–∞—à_")

    let issue = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞"
    let solution = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"

    if (!keysExist) {
      issue = "API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
      solution = "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.local —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ API –∫–ª—é—á–∞–º–∏ Bybit"
    } else if (!keysValid) {
      issue = "API –∫–ª—é—á–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ"
      solution = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π"
    } else if (!keysConfigured) {
      issue = "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è placeholder'—ã –≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π"
      solution = "–ó–∞–º–µ–Ω–∏—Ç–µ '–≤–∞—à_—Ä–µ–∞–ª—å–Ω—ã–π_api_key' –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –∫–ª—é—á–∏ —Å Bybit"
    } else {
      issue = "API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
      solution = "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ"
    }

    const response = {
      timestamp: new Date().toISOString(),
      environment: {
        NODE_ENV: process.env.NODE_ENV,
        BYBIT_API_KEY_EXISTS: !!apiKey,
        BYBIT_API_SECRET_EXISTS: !!apiSecret,
        BYBIT_API_KEY_LENGTH: apiKey?.length || 0,
        BYBIT_API_SECRET_LENGTH: apiSecret?.length || 0,
        BYBIT_API_KEY_PREVIEW: apiKey ? `${apiKey.substring(0, 8)}...` : null,
        BYBIT_API_SECRET_PREVIEW: apiSecret ? `${apiSecret.substring(0, 8)}...` : null,
      },
      diagnosis: {
        keysExist,
        keysValid,
        keysConfigured,
        issue,
        solution,
      },
    }

    console.log("üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:", response.diagnosis)

    return NextResponse.json(response)
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:", error)

    return NextResponse.json(
      {
        timestamp: new Date().toISOString(),
        error: error?.toString(),
        diagnosis: {
          keysExist: false,
          keysValid: false,
          keysConfigured: false,
          issue: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã",
          solution: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞",
        },
      },
      { status: 500 },
    )
  }
}
