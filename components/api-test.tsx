"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { directApiTest, testBybitConnection, getApiStatus } from "@/lib/bybit-simple"
import { CheckCircle, XCircle, Play, Bug, Zap } from "lucide-react"

export function ApiTest() {
  const [isTestingDirect, setIsTestingDirect] = useState(false)
  const [isTestingConnection, setIsTestingConnection] = useState(false)
  const [directResults, setDirectResults] = useState<any>(null)
  const [connectionResults, setConnectionResults] = useState<any>(null)

  const handleDirectTest = async () => {
    setIsTestingDirect(true)
    try {
      console.log("üß™ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä—è–º–æ–π —Ç–µ—Å—Ç API...")
      const results = await directApiTest()
      setDirectResults(results)
      console.log("üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞:", results)
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞:", error)
      setDirectResults({ error: error?.toString() })
    } finally {
      setIsTestingDirect(false)
    }
  }

  const handleConnectionTest = async () => {
    setIsTestingConnection(true)
    try {
      console.log("üîç –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
      const results = await testBybitConnection()
      setConnectionResults(results)
      console.log("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", results)
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", error)
      setConnectionResults({ success: false, error: error?.toString() })
    } finally {
      setIsTestingConnection(false)
    }
  }

  const apiStatus = getApiStatus()

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Bug className="h-5 w-5" />
          –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API (–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        {/* –°—Ç–∞—Ç—É—Å API –∫–ª—é—á–µ–π */}
        <div className="bg-gray-50 rounded-lg p-4">
          <h4 className="font-medium mb-2">–°—Ç–∞—Ç—É—Å API –∫–ª—é—á–µ–π:</h4>
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div>
              <span className="text-gray-600">API Key:</span>
              <span className={`ml-2 font-medium ${apiStatus.apiKey ? "text-green-600" : "text-red-600"}`}>
                {apiStatus.apiKey ? "‚úÖ –ù–∞–π–¥–µ–Ω" : "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω"}
              </span>
            </div>
            <div>
              <span className="text-gray-600">API Secret:</span>
              <span className={`ml-2 font-medium ${apiStatus.apiSecret ? "text-green-600" : "text-red-600"}`}>
                {apiStatus.apiSecret ? "‚úÖ –ù–∞–π–¥–µ–Ω" : "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω"}
              </span>
            </div>
            <div>
              <span className="text-gray-600">–ò—Å—Ç–æ—á–Ω–∏–∫:</span>
              <span className="ml-2 font-medium">{apiStatus.source}</span>
            </div>
            <div>
              <span className="text-gray-600">–î–ª–∏–Ω–∞ –∫–ª—é—á–∞:</span>
              <span className="ml-2 font-medium">{apiStatus.keyLength} —Å–∏–º–≤–æ–ª–æ–≤</span>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <Button onClick={handleConnectionTest} disabled={isTestingConnection} className="h-16">
            <Zap className="h-4 w-4 mr-2" />
            <div className="text-left">
              <div>{isTestingConnection ? "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." : "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"}</div>
              <div className="text-xs opacity-75">–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API</div>
            </div>
          </Button>

          <Button
            onClick={handleDirectTest}
            disabled={isTestingDirect}
            variant="outline"
            className="h-16 bg-transparent"
          >
            <Play className="h-4 w-4 mr-2" />
            <div className="text-left">
              <div>{isTestingDirect ? "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." : "–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç"}</div>
              <div className="text-xs opacity-75">–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤</div>
            </div>
          </Button>
        </div>

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
        {connectionResults && (
          <div
            className={`rounded-lg p-4 ${
              connectionResults.success ? "bg-green-50 border border-green-200" : "bg-red-50 border border-red-200"
            }`}
          >
            <div className="flex items-center gap-2 mb-2">
              {connectionResults.success ? (
                <CheckCircle className="h-5 w-5 text-green-600" />
              ) : (
                <XCircle className="h-5 w-5 text-red-600" />
              )}
              <span className={`font-medium ${connectionResults.success ? "text-green-800" : "text-red-800"}`}>
                –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {connectionResults.success ? "–£–°–ü–ï–•" : "–ü–†–û–í–ê–õ"}
              </span>
            </div>
            <p className={`text-sm ${connectionResults.success ? "text-green-700" : "text-red-700"}`}>
              {connectionResults.message}
            </p>
            {connectionResults.details && (
              <div className="mt-2 text-xs">
                <pre className="bg-white p-2 rounded border overflow-auto max-h-32">
                  {JSON.stringify(connectionResults.details, null, 2)}
                </pre>
              </div>
            )}
          </div>
        )}

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞ */}
        {directResults && (
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h4 className="font-medium mb-2 text-blue-800">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞:</h4>
            <div className="space-y-2 text-sm">
              <div className="flex items-center justify-between">
                <span>–ë–∞–ª–∞–Ω—Å:</span>
                <Badge variant={directResults.balance ? "default" : "destructive"}>
                  {directResults.balance ? "‚úÖ OK" : "‚ùå FAIL"}
                </Badge>
              </div>
              <div className="flex items-center justify-between">
                <span>–ü–æ–∑–∏—Ü–∏–∏:</span>
                <Badge variant={directResults.positions ? "default" : "destructive"}>
                  {directResults.positions ? "‚úÖ OK" : "‚ùå FAIL"}
                </Badge>
              </div>
              <div className="flex items-center justify-between">
                <span>–°–¥–µ–ª–∫–∏:</span>
                <Badge variant={directResults.trades ? "default" : "destructive"}>
                  {directResults.trades ? "‚úÖ OK" : "‚ùå FAIL"}
                </Badge>
              </div>
              {directResults.errors && directResults.errors.length > 0 && (
                <div className="mt-2">
                  <span className="text-red-600 font-medium">–û—à–∏–±–∫–∏:</span>
                  <ul className="list-disc list-inside text-red-600 text-xs mt-1">
                    {directResults.errors.map((error: string, index: number) => (
                      <li key={index}>{error}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </div>
        )}

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <div className="text-sm text-yellow-800">
            <p className="font-medium mb-2">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:</p>
            <ol className="list-decimal list-inside space-y-1">
              <li>–ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è" –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏</li>
              <li>–ï—Å–ª–∏ —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏—Ç—Å—è, –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç" –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏</li>
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤</li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</li>
            </ol>
          </div>
        </div>
      </CardContent>
    </Card>
  )
}
