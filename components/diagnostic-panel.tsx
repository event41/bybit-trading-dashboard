"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { runFullDiagnostic, quickDiagnostic, type FullDiagnostic } from "@/lib/bybit-diagnostics"
import { CheckCircle, XCircle, AlertTriangle, Play, Bug, Zap, Copy, Eye, EyeOff, RefreshCw } from "lucide-react"

export function DiagnosticPanel() {
  const [isRunning, setIsRunning] = useState(false)
  const [results, setResults] = useState<FullDiagnostic | null>(null)
  const [showDetails, setShowDetails] = useState(false)
  const [quickResults, setQuickResults] = useState<any>(null)

  const runQuickTest = async () => {
    console.log("‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...")
    const quick = await quickDiagnostic()
    setQuickResults(quick)
    console.log("‚ö° –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:", quick)
  }

  const runFullTest = async () => {
    setIsRunning(true)
    try {
      console.log("üîç –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...")
      const diagnostic = await runFullDiagnostic()
      setResults(diagnostic)
      console.log("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:", diagnostic)
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:", error)
    } finally {
      setIsRunning(false)
    }
  }

  const copyResults = () => {
    if (results) {
      const text = JSON.stringify(results, null, 2)
      navigator.clipboard.writeText(text)
      alert("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!")
    }
  }

  const getStatusIcon = (success: boolean) => {
    return success ? <CheckCircle className="h-4 w-4 text-green-600" /> : <XCircle className="h-4 w-4 text-red-600" />
  }

  const getStatusBadge = (success: boolean, label: string) => {
    return (
      <Badge variant={success ? "default" : "destructive"} className="text-xs">
        {success ? "‚úÖ" : "‚ùå"} {label}
      </Badge>
    )
  }

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Bug className="h-5 w-5" />
            –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Bybit API (–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞)
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <div className="flex items-center justify-between mb-3">
              <h4 className="font-medium text-blue-900">‚ö° –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</h4>
              <Button size="sm" onClick={runQuickTest} variant="outline">
                <Zap className="h-3 w-3 mr-1" />
                –ó–∞–ø—É—Å—Ç–∏—Ç—å
              </Button>
            </div>

            {quickResults && (
              <div className="space-y-2 text-sm">
                <div className="flex items-center justify-between">
                  <span>–û–∫—Ä—É–∂–µ–Ω–∏–µ:</span>
                  <Badge variant="secondary">{quickResults.environment}</Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span>API –∫–ª—é—á–∏:</span>
                  {getStatusBadge(quickResults.hasKeys, quickResults.hasKeys ? "–ù–∞–π–¥–µ–Ω—ã" : "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")}
                </div>
                <div className="flex items-center justify-between">
                  <span>–ü—É–±–ª–∏—á–Ω—ã–π API:</span>
                  {getStatusBadge(
                    quickResults.publicApiWorks,
                    quickResults.publicApiWorks ? "–†–∞–±–æ—Ç–∞–µ—Ç" : "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                  )}
                </div>
                <div className="mt-3 p-2 bg-blue-100 rounded text-blue-800 text-xs">
                  üí° <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> {quickResults.recommendation}
                </div>
              </div>
            )}
          </div>

          {/* –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ */}
          <div className="flex gap-2">
            <Button onClick={runFullTest} disabled={isRunning} className="flex-1">
              <Play className="h-4 w-4 mr-2" />
              {isRunning ? "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞..." : "–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"}
              {isRunning && <RefreshCw className="h-4 w-4 ml-2 animate-spin" />}
            </Button>

            {results && (
              <Button onClick={copyResults} variant="outline" size="sm">
                <Copy className="h-3 w-3" />
              </Button>
            )}
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ */}
          {results && (
            <div className="space-y-4">
              {/* –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å */}
              <div
                className={`rounded-lg p-4 ${
                  results.summary.success ? "bg-green-50 border border-green-200" : "bg-red-50 border border-red-200"
                }`}
              >
                <div className="flex items-center gap-2 mb-2">
                  {getStatusIcon(results.summary.success)}
                  <span className={`font-medium ${results.summary.success ? "text-green-800" : "text-red-800"}`}>
                    {results.summary.success ? "‚úÖ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢!" : "‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´"}
                  </span>
                </div>
                <p className={`text-sm ${results.summary.success ? "text-green-700" : "text-red-700"}`}>
                  <strong>–ü—Ä–æ–±–ª–µ–º–∞:</strong> {results.summary.mainIssue}
                </p>
                <p className={`text-sm mt-1 ${results.summary.success ? "text-green-700" : "text-red-700"}`}>
                  <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> {results.summary.recommendation}
                </p>
              </div>

              {/* –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div
                  className={`p-3 rounded-lg border ${
                    results.publicApi.success ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200"
                  }`}
                >
                  <div className="flex items-center gap-2 mb-1">
                    {getStatusIcon(results.publicApi.success)}
                    <span className="font-medium text-sm">–ü—É–±–ª–∏—á–Ω—ã–π API</span>
                  </div>
                  <p className="text-xs text-gray-600">{results.publicApi.message}</p>
                </div>

                <div
                  className={`p-3 rounded-lg border ${
                    results.signature.success ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200"
                  }`}
                >
                  <div className="flex items-center gap-2 mb-1">
                    {getStatusIcon(results.signature.success)}
                    <span className="font-medium text-sm">–ü–æ–¥–ø–∏—Å—å</span>
                  </div>
                  <p className="text-xs text-gray-600">{results.signature.message}</p>
                </div>

                <div
                  className={`p-3 rounded-lg border ${
                    results.privateApi.success ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200"
                  }`}
                >
                  <div className="flex items-center gap-2 mb-1">
                    {getStatusIcon(results.privateApi.success)}
                    <span className="font-medium text-sm">–ü—Ä–∏–≤–∞—Ç–Ω—ã–π API</span>
                  </div>
                  <p className="text-xs text-gray-600">{results.privateApi.message}</p>
                </div>
              </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏ */}
              <div className="bg-gray-50 rounded-lg p-4">
                <div className="flex items-center justify-between mb-2">
                  <h4 className="font-medium text-sm">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏</h4>
                  <Button size="sm" variant="ghost" onClick={() => setShowDetails(!showDetails)}>
                    {showDetails ? <EyeOff className="h-3 w-3" /> : <Eye className="h-3 w-3" />}
                  </Button>
                </div>

                {showDetails && (
                  <div className="space-y-2 text-xs">
                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <span className="text-gray-600">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</span>
                        <span className="ml-2 font-medium">{results.environment.platform}</span>
                      </div>
                      <div>
                        <span className="text-gray-600">NODE_ENV:</span>
                        <span className="ml-2 font-medium">{results.environment.nodeEnv}</span>
                      </div>
                      <div>
                        <span className="text-gray-600">API Key:</span>
                        <span className="ml-2 font-medium">{results.environment.bybitApiKey}</span>
                      </div>
                      <div>
                        <span className="text-gray-600">API Secret:</span>
                        <span className="ml-2 font-medium">{results.environment.bybitApiSecret}</span>
                      </div>
                    </div>

                    <div className="mt-3 p-2 bg-white rounded border">
                      <div className="text-xs text-gray-600">–î–µ—Ç–∞–ª–∏ API –∫–ª—é—á–µ–π:</div>
                      <div className="mt-1 space-y-1 text-xs">
                        <div>–î–ª–∏–Ω–∞ API Key: {results.apiKeys.apiKeyLength}</div>
                        <div>–î–ª–∏–Ω–∞ API Secret: {results.apiKeys.apiSecretLength}</div>
                        <div>–¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª—é—á–∏: {results.apiKeys.isTestKeys ? "–î–∞" : "–ù–µ—Ç"}</div>
                        <div>–ö–ª—é—á–∏ –≤–∞–ª–∏–¥–Ω—ã: {results.apiKeys.keysValid ? "–î–∞" : "–ù–µ—Ç"}</div>
                      </div>
                    </div>
                  </div>
                )}
              </div>

              {/* –û—à–∏–±–∫–∏ */}
              {(!results.publicApi.success || !results.signature.success || !results.privateApi.success) && (
                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                  <div className="flex items-start gap-2">
                    <AlertTriangle className="h-4 w-4 text-yellow-600 mt-0.5" />
                    <div className="text-sm">
                      <p className="font-medium text-yellow-900 mb-2">–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:</p>
                      <ul className="space-y-1 text-yellow-800 text-xs">
                        {!results.publicApi.success && <li>‚Ä¢ –ü—É–±–ª–∏—á–Ω—ã–π API: {results.publicApi.error}</li>}
                        {!results.signature.success && <li>‚Ä¢ –ü–æ–¥–ø–∏—Å—å: {results.signature.error}</li>}
                        {!results.privateApi.success && <li>‚Ä¢ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π API: {results.privateApi.error}</li>}
                      </ul>
                    </div>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h4 className="font-medium text-blue-900 mb-2">üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É:</h4>
            <ol className="list-decimal list-inside space-y-1 text-blue-800 text-sm">
              <li>
                –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ <strong>–±—ã—Å—Ç—Ä—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É</strong>
              </li>
              <li>
                –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∑–∞–ø—É—Å—Ç–∏—Ç–µ <strong>–ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É</strong>
              </li>
              <li>
                –û—Ç–∫—Ä–æ–π—Ç–µ <strong>–∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)</strong> –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤
              </li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏</li>
            </ol>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
