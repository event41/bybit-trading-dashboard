// –ù–û–í–ê–Ø –ü–†–ê–í–ò–õ–¨–ù–ê–Ø —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Bybit API V5

const API_KEY = process.env.BYBIT_API_KEY || "nBvwdEqz4WgGCQIQBR"
const API_SECRET = process.env.BYBIT_API_SECRET || "NY3exgnwUQZtO14ysRUepZSjRGJfpKNmikBXN"

console.log("üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á–∏:")
console.log("- API_KEY:", API_KEY ? `${API_KEY.substring(0, 10)}...` : "–ù–ï–¢")
console.log("- API_SECRET:", API_SECRET ? `${API_SECRET.substring(0, 10)}...` : "–ù–ï–¢")

// –ü–†–ê–í–ò–õ–¨–ù–´–ô –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è Bybit V5 API
function createCorrectSignature(timestamp: string, apiKey: string, recvWindow: string, queryString: string): string {
  if (typeof window !== "undefined") {
    return "browser_mock_signature"
  }

  try {
    const crypto = require("crypto")

    // –í–ê–ñ–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–ª—è Bybit V5 API
    // –§–æ—Ä–º–∞—Ç: timestamp + apiKey + recvWindow + queryString
    const message = timestamp + apiKey + recvWindow + queryString

    console.log("üîê –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏:")
    console.log("- timestamp:", timestamp)
    console.log("- apiKey:", apiKey.substring(0, 8) + "...")
    console.log("- recvWindow:", recvWindow)
    console.log("- queryString:", queryString)
    console.log("- message:", message)

    const signature = crypto.createHmac("sha256", API_SECRET).update(message).digest("hex")
    console.log("- signature:", signature)

    return signature
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏:", error)
    return "error_signature"
  }
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
async function makeCorrectRequest(endpoint: string, params: Record<string, any> = {}) {
  console.log(`üåê === –ù–û–í–´–ô –ó–ê–ü–†–û–° –ö BYBIT ===`)
  console.log("Endpoint:", endpoint)
  console.log("Params:", params)

  if (!API_KEY || !API_SECRET) {
    console.log("‚ùå –ù–µ—Ç API –∫–ª—é—á–µ–π")
    return null
  }

  try {
    const timestamp = Date.now().toString()
    const recvWindow = "5000"

    // –°–æ–∑–¥–∞–µ–º query string
    const queryString = new URLSearchParams(params).toString()
    console.log("Query string:", queryString)

    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å
    const signature = createCorrectSignature(timestamp, API_KEY, recvWindow, queryString)

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = {
      "X-BAPI-API-KEY": API_KEY,
      "X-BAPI-SIGN": signature,
      "X-BAPI-SIGN-TYPE": "2",
      "X-BAPI-TIMESTAMP": timestamp,
      "X-BAPI-RECV-WINDOW": recvWindow,
      "Content-Type": "application/json",
    }

    console.log("üì§ –ó–∞–≥–æ–ª–æ–≤–∫–∏:")
    console.log("- X-BAPI-API-KEY:", API_KEY.substring(0, 8) + "...")
    console.log("- X-BAPI-SIGN:", signature.substring(0, 16) + "...")
    console.log("- X-BAPI-TIMESTAMP:", timestamp)

    const url = `https://api.bybit.com${endpoint}${queryString ? `?${queryString}` : ""}`
    console.log("üîó URL:", url)

    const response = await fetch(url, {
      method: "GET",
      headers,
    })

    console.log("üì• HTTP Status:", response.status)

    if (!response.ok) {
      const errorText = await response.text()
      console.error("‚ùå HTTP Error:", response.status, errorText)
      return null
    }

    const data = await response.json()
    console.log("üìä Response:", data)

    if (data.retCode === 0) {
      console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—Ä–æ—Å!")
      return data.result
    } else {
      console.error("‚ùå Bybit API Error:")
      console.error("- retCode:", data.retCode)
      console.error("- retMsg:", data.retMsg)
      return null
    }
  } catch (error) {
    console.error("‚ùå –ö—Ä–∏ÔøΩÔøΩ–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error)
    return null
  }
}

// –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
export async function testNewBalance() {
  console.log("üí∞ === –¢–ï–°–¢ –ù–û–í–û–ì–û –ë–ê–õ–ê–ù–°–ê ===")
  return await makeCorrectRequest("/v5/account/wallet-balance", {
    accountType: "UNIFIED",
  })
}

export async function testNewPositions() {
  console.log("üìä === –¢–ï–°–¢ –ù–û–í–´–• –ü–û–ó–ò–¶–ò–ô ===")
  return await makeCorrectRequest("/v5/position/list", {
    category: "linear",
  })
}

export async function testNewTrades() {
  console.log("üìà === –¢–ï–°–¢ –ù–û–í–´–• –°–î–ï–õ–û–ö ===")
  return await makeCorrectRequest("/v5/execution/list", {
    category: "linear",
    limit: 10,
  })
}

// –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç API
export async function fullApiTest() {
  console.log("üß™ === –ü–û–õ–ù–´–ô –¢–ï–°–¢ API ===")

  const results = {
    balance: null as any,
    positions: null as any,
    trades: null as any,
    success: false,
  }

  try {
    // –¢–µ—Å—Ç –±–∞–ª–∞–Ω—Å–∞
    console.log("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å...")
    results.balance = await testNewBalance()
    console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–ª–∞–Ω—Å–∞:", results.balance ? "‚úÖ OK" : "‚ùå FAIL")

    // –¢–µ—Å—Ç –ø–æ–∑–∏—Ü–∏–π
    console.log("2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏–∏...")
    results.positions = await testNewPositions()
    console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∑–∏—Ü–∏–π:", results.positions ? "‚úÖ OK" : "‚ùå FAIL")

    // –¢–µ—Å—Ç —Å–¥–µ–ª–æ–∫
    console.log("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–¥–µ–ª–∫–∏...")
    results.trades = await testNewTrades()
    console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–¥–µ–ª–æ–∫:", results.trades ? "‚úÖ OK" : "‚ùå FAIL")

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—Ö
    results.success = !!(results.balance || results.positions || results.trades)

    console.log("üéØ === –ò–¢–û–ì–ò –¢–ï–°–¢–ê ===")
    console.log("- –ë–∞–ª–∞–Ω—Å:", results.balance ? "‚úÖ" : "‚ùå")
    console.log("- –ü–æ–∑–∏—Ü–∏–∏:", results.positions ? "‚úÖ" : "‚ùå")
    console.log("- –°–¥–µ–ª–∫–∏:", results.trades ? "‚úÖ" : "‚ùå")
    console.log("- –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:", results.success ? "‚úÖ –£–°–ü–ï–•" : "‚ùå –ü–†–û–í–ê–õ")

    return results
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞:", error)
    results.success = false
    return results
  }
}
